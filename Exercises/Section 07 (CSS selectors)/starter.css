/* * {
    background-color: cyan;
} */

body {
  background-color: #f1faee;
}

button {
  font-size: 30px;
  background-color: #a8dadc;
}

/* multiple selector */
h1,
h2 {
  color: #1d3557;
}

/* selects by ID */
#signup {
  background-color: #1d3557;
  color: #f1faee;
}

span {
  color: #457b9d;
}

/* selects by CLASS */
.tag {
  background-color: #e63946;
  color: #f1faee;
  font-size: 16px;
}

/* decendent selector: element nested inside class */
.post a {
  color: magenta;
  font-weight: 700;
  text-decoration: none;
}

/* descendent selector (even though it's FOUR levels down in HTML) */
footer a {
  color: #ffcad4;
}

/* adjacent combinator (targets the element RIGHT AFTER the first mentioned one) */
h2 + button {
  font-size: 20px;
}

/* direct-descendent (direct child) */
footer > a {
  color: #3a86ff;
}

/* attribute selector. Here selects input with type="password" attribute */
input[type="password"] {
  color: #c44536;
}
/* attribute selector. Here selects anchor tag with href CONTAINING "google". More variants available in documentation */
a[href*="google"] {
  color: aqua;
}

/* ---------------- PSEUDO CLASSES ---------------- */
/* pseudo class :hover here applies only to buttons with class="post" */
.post button:hover {
  background-color: #e63946;
  color: #f1faee;
}
.post a:hover {
  text-decoration: underline;
}
/* pseudo class :active here makes a button a different background color WHEN PRESSED */
.post button:active {
  background-color: #ffcbf2;
}
/* here pseudo class :nth-of-type() selects only EVERY OTHER element with class="post", because indicated by "2n" */
.post:nth-of-type(2n) {
  background-color: #dfe8dc;
}

/* ---------------- PSEUDO ELEMENTS ---------------- */
/* pseudo element selects PARTICULAR PIECES rather than stated as in pseudo classes */
/* syntax: has DOUBLE COLON unlike pseudo class (but even a single colon works in Chrome) */
h2::first-letter {
  font-size: 50px;
}
p::first-line {
  color: #3a86ff;
}
/* выделение */
p::selection {
  background-color: #fcbf49;
}

/* ---------------- SPECIFICITY ---------------- */
/* Chart of specificity: 
1. "!important" (the most specific possible label overriding all other declarations - STAY AWAY)
2. Inline styles inside HTML (BAD!!! DON'T USE!!!) 
3. ID Selectors
4. Class, Attribute & Pseudo-Class Selectors
5. Element and Pseudo-Element Selectors
*/
/* button {
            background-color: khaki !important;
          } */
/* example above overwrites background-color to every button in document */
/* -------------------------------- */

